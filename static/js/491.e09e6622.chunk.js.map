{"version":3,"file":"static/js/491.e09e6622.chunk.js","mappings":"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","sources":["services/movies-api.js","views/MovieDetailsView/MovieDetailsView.styled.js","components/SearchForm/Searchbar.styled.js","components/SearchForm/SearchForm.jsx","views/SearchMovieByName.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'b799de2e1359641dffd47460cedfbdc0';\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n// гет-запит  по  пошуку фільму\nexport function getMovieBySearch(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?&query=${query}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n  );\n}\n// гет-запит для актерського складу\nexport function getCast(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n//  гет=запит для оглядів чи відкугів на фільм\nexport function getReviews(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n}\n//  гет-запит популярних фільмів\nexport function GetTrending() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n// гет-запит про інфо фільму по айді\nexport function getMoviesById(movieId) {\n  // а тут наоборот єкспанд автор - когда мі забираем одну книжку, мі прикрепляем к ней ее автора, тоже по айдишнику\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n}\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nexport const CardMovie = styled.div`\n  display: flex;\n  margin-bottom: 10px;\n  /* border-bottom: 1px solid #2a363b; */\n`;\nexport const MovieInfo = styled.div`\n  display: block;\n  margin-left: 20px;\n`;\nexport const Horizontal = styled.div`\n  height: 12px;\n  border: 0;\n  box-shadow: inset 0 12px 12px -12px rgba(0, 0, 0, 0.5);\n`;\nexport const Titleh2 = styled.h2`\n  color: #2314f7;\n`;\nexport const Titleh3 = styled.h3`\n  color: #2314f7;\n`;\n\nexport const LinkElem = styled(NavLink)`\n  display: inline-block;\n  /* display: flex; */\n  text-decoration: none;\n  padding: 10px;\n  font-weight: 700;\n  color: #30ebfc;\n  font-size: 26px;\n  background: #fcfccf;\n  /* border: 5px solid #30ebfc; */\n  border-radius: 8px;\n  margin-right: 20px;\n  margin-bottom: 10px;\n  box-shadow: 0 0 10px 1px #30ebfc;\n\n  &.active {\n    /* composes: link; */\n    color: #2314f7;\n  }\n`;\n","import styled from 'styled-components';\nimport img from '../SearchForm/search.png';\n/*\n * Стили компонента Searchbar\n */\nexport const Searchbar = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\n/*\n * Стили компонента Searchbar\n */\n/*\n * Стили компонента SearchForm\n */\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  margin: 10px;\n  max-width: 600px;\n  background-color: lightyellow;\n  border: 2px solid #30ebfc;\n  border-radius: 3px;\n  overflow: hidden;\n  box-shadow: 0 0 10px 1px #30ebfc;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url(${img});\n  background-color: #30ebfc;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  background-color: lightyellow;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import React from 'react';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport './Searchbar.styled.js';\nimport {\n  SearchForm,\n  SearchFormButton,\n  SearchFormButtonLabel,\n  SearchFormInput,\n} from './Searchbar.styled';\n\nexport default function FormBySearch(props) {\n  const [searchMovie, setSearchMovie] = useState(props.searchMovie);\n  // обновляє стейт при кожному нажатии в инпуті\n  const handleChange = event => {\n    setSearchMovie(event.currentTarget.value.toLowerCase());\n    // console.log(setSearchMovie);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    // при сабміті нашої форми визиваємо метод із АРР (хендлформсабмит), який сюди передався як проп\n    // імя пропа може бути яке завгодно, я назвала інсабміт\n    // проверяем, если в форму ничего не ввели, или там просто пробелі (метод трим)\n    // то ми просто виходимо з цього метода і не самбітимо форму\n    if (searchMovie.trim() === '') {\n      toast.error('Please enter your query');\n      return;\n    }\n    props.inSubmit(searchMovie);\n    // очищаем стейт зразу після сабміта форми\n    // setSearchImage('');\n  };\n  return (\n    <SearchForm onSubmit={handleSubmit}>\n      <SearchFormButton type=\"submit\">\n        <SearchFormButtonLabel>Search</SearchFormButtonLabel>\n      </SearchFormButton>\n      <SearchFormInput\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        value={searchMovie}\n        onChange={handleChange}\n      />\n    </SearchForm>\n  );\n}\n\nFormBySearch.propTypes = {\n  searchMovie: PropTypes.string,\n  inSubmit: PropTypes.func,\n};\n","import { useState, useEffect } from 'react';\nimport { NavLink, useLocation, useNavigate } from 'react-router-dom';\nimport { useSearchParams } from 'react-router-dom';\nimport FormBySearch from 'components/SearchForm/SearchForm';\nimport { toast } from 'react-toastify';\nimport * as movieAPI from '../services/movies-api';\n// import styled from 'styled-components';\nimport { Horizontal } from '../views/MovieDetailsView/MovieDetailsView.styled';\n\nexport default function SearchMovieByName() {\n  const [searchParams] = useSearchParams();\n  // повертає параметри адресного рядка, нам потрібно значення квері -\n  // вибираємо квері з серчпарамса і записуємо його юз стейт\n  // якщо квері немає, то серчпарамс повертає нул, тому робимо перевірку - або є квері, або там пустий рядок\n  // передаємо це значення в початковий стейт серчМуві\n  const [searchMovie, setSearchMovie] = useState(\n    searchParams.get('query') || ''\n  );\n  const [movies, setMovies] = useState([]);\n  // const search = useSearchParams();\n  // URLSearchParams.get();\n  // console.log(search);\n  const navigate = useNavigate();\n  const location = useLocation();\n  console.log('search:', location);\n  // console.log(movies);\n  useEffect(() => {\n    // якщо рядок пустий (або щось фолс), то не робимо запит і просто виходимо з юзєфекта\n    if (!searchMovie) {\n      return;\n    }\n    movieAPI.getMovieBySearch(searchMovie).then(response => {\n      if (response.results.length === 0) {\n        return toast.info(\n          'Sorry, there are no movies matching your search query. Please try again.'\n        );\n      }\n      setMovies(response.results);\n      // console.log(movie);\n    });\n  }, [searchMovie]);\n\n  const handleFormSubmit = searchMovie => {\n    // console.log(searchMovie);\n    // дописали в адресному рядку квері із значенням пошуку\n    navigate(`/movies/?query=${searchMovie}`);\n    setSearchMovie(searchMovie);\n    setMovies([]);\n    // console.log(movies);\n  };\n  return (\n    <>\n      <FormBySearch inSubmit={handleFormSubmit} searchMovie={searchMovie} />\n      <Horizontal />\n      {movies && (\n        <ul>\n          {movies.map(movie => (\n            <NavLink\n              // to={`/movies/?query=${searchMovie}`}\n              to={`/movies/${movie.id}`}\n              state={location}\n              key={movie.id}\n            >\n              <p>{movie.title}</p>\n            </NavLink>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n"],"names":["BASE_URL","API_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","getMovieBySearch","query","getCast","movieId","getReviews","GetTrending","getMoviesById","CardMovie","styled","MovieInfo","Horizontal","Titleh2","Titleh3","LinkElem","NavLink","SearchForm","SearchFormButton","img","SearchFormButtonLabel","SearchFormInput","FormBySearch","props","useState","searchMovie","setSearchMovie","onSubmit","event","preventDefault","trim","inSubmit","toast","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","SearchMovieByName","useSearchParams","searchParams","get","movies","setMovies","navigate","useNavigate","location","useLocation","console","log","useEffect","movieAPI","then","results","length","map","movie","to","id","state","title"],"sourceRoot":""}