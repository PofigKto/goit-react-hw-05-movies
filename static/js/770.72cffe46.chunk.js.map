{"version":3,"file":"static/js/770.72cffe46.chunk.js","mappings":"+LACaA,EAAeC,EAAAA,GAAAA,OAAH,2NAUZC,EAAYD,EAAAA,GAAAA,KAAH,uG,SCLP,SAASE,EAAT,GAAkD,IAA1BC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,MAGrD,OACE,UAACN,EAAD,CAAcO,KAAK,SAASH,QAASA,EAArC,UACGE,GAED,UAACJ,EAAD,eAAaG,EAAb,Y,oLCbAG,EAAW,+BACXC,EAAU,mCAAhB,SACeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,W,aAAf,O,oBAAA,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,EAAiBC,GAC/B,OAAOX,EAAuB,GAAD,OACxBF,EADwB,gCACQa,EADR,oBACyBZ,EADzB,+CAKxB,SAASa,EAAQC,GACtB,OAAOb,EAAuB,GAAD,OACxBF,EADwB,kBACNe,EADM,4BACqBd,EADrB,oBAKxB,SAASe,EAAWD,GACzB,OAAOb,EAAuB,GAAD,OACxBF,EADwB,kBACNe,EADM,4BACqBd,EADrB,2BAKxB,SAASgB,IACd,OAAOf,EAAuB,GAAD,OACxBF,EADwB,uCACeC,IAIvC,SAASiB,EAAcH,GAE5B,OAAOb,EAAuB,GAAD,OACxBF,EADwB,kBACNe,EADM,oBACad,M,yICnC/BkB,EAAa1B,EAAAA,GAAAA,GAAH,6DAIV2B,EAAS3B,EAAAA,GAAAA,EAAH,uIAON4B,EAAkB5B,EAAAA,GAAAA,KAAH,8D,kBCDb,SAAS6B,IACtB,IAAQP,GAAYQ,EAAAA,EAAAA,MAAZR,QACR,GAA8BS,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GACcb,GACXc,MAAK,SAAAvB,GAAQ,OAAIoB,EAAWpB,EAASwB,cACvC,CAACf,IASJ,OACE,8BACGU,EAAQM,OAAS,GAChB,0BACGN,EAAQO,KAAI,SAAAC,GAAM,OACjB,2BACE,UAACd,EAAD,uBACU,UAACE,EAAD,eAAmBY,EAAOC,OAA1B,WAEV,SAACd,EAAD,UAASa,EAAOE,YAJTF,EAAOG,QAelB,SAACC,EAAA,EAAD,CACEzC,QA5BU,WAClB0C,OAAOC,SAAS,CACdC,IAAK,IAELC,SAAU,YAyBJ5C,MAAO,QACPC,OAAO,SAAC,MAAD,CAAW4C,KAAK,UAAUC,KAAK,aAI1C","sources":["components/Button/Button.styled.js","components/Button/Button.jsx","services/movies-api.js","views/MoviesReviews/MoviesReviews.styled.js","views/MoviesReviews/MoviesReviews.jsx"],"sourcesContent":["import styled from 'styled-components';\nexport const GoBackButton = styled.button`\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n  background-color: lightyellow;\n  border-radius: 10px;\n  border: none;\n  box-shadow: 0 0 10px 1px #30ebfc;\n  padding: 5px;\n`;\nexport const SpanLabel = styled.span`\n  margin-left: 10px;\n  color: #2314f7;\n  font-weight: 700;\n  padding: 5px;\n`;\n","import PropTypes from 'prop-types';\n// import { useNavigate } from 'react-router-dom';\nimport './Button.styled.js';\nimport { GoBackButton, SpanLabel } from './Button.styled';\n// import { ImArrowLeft } from 'react-icons/im';\n\nexport default function ButtonGoBack({ onClick, label, arrow }) {\n  // const navigate = useNavigate();\n  // console.log(navigate);\n  return (\n    <GoBackButton type=\"button\" onClick={onClick}>\n      {arrow}\n      {/* <ImArrowLeft fill=\"darkblue\" size=\"32\" /> */}\n      <SpanLabel> {label} </SpanLabel>\n    </GoBackButton>\n    //{' '}\n    // </GoBackButton>\n  );\n}\n\nButtonGoBack.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'b799de2e1359641dffd47460cedfbdc0';\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n// гет-запит  по  пошуку фільму\nexport function getMovieBySearch(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?&query=${query}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n  );\n}\n// гет-запит для актерського складу\nexport function getCast(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n//  гет=запит для оглядів чи відкугів на фільм\nexport function getReviews(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n}\n//  гет-запит популярних фільмів\nexport function GetTrending() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n// гет-запит про інфо фільму по айді\nexport function getMoviesById(movieId) {\n  // а тут наоборот єкспанд автор - когда мі забираем одну книжку, мі прикрепляем к ней ее автора, тоже по айдишнику\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n}\n","import styled from 'styled-components';\nexport const AuthorName = styled.h3`\n  color: red;\n  font-weight: bold;\n`;\nexport const Review = styled.p`\n  text-align: justify;\n  display: flex;\n  flex-direction: column;\n  color: darkblue;\n  font-weight: bold;\n`;\nexport const AuthorNameValue = styled.span`\n  color: blue;\n  font-weight: bold;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ButtonGoBack from '../../components/Button';\nimport * as moviesAPI from '../../services/movies-api';\nimport {\n  AuthorName,\n  Review,\n  AuthorNameValue,\n} from '../MoviesReviews/MoviesReviews.styled';\nimport { ImArrowUp } from 'react-icons/im';\n\nexport default function MoviesReviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  // const navigate = useNavigate();\n  useEffect(() => {\n    moviesAPI\n      .getReviews(movieId)\n      .then(response => setReviews(response.results));\n  }, [movieId]);\n  // console.log(reviews);\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 100,\n      // top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <AuthorName>\n                Author: <AuthorNameValue> {review.author} </AuthorNameValue>\n              </AuthorName>\n              <Review>{review.content}</Review>\n            </li>\n          ))}\n          {/* <ButtonGoBack\n            onClick={() => {\n              navigate('..');\n            }}\n            label={'GO UP'}\n            arrow={<ImArrowUp fill=\"#2314f7\" size=\"32\" />}\n            // state={location.state}\n          /> */}\n          <ButtonGoBack\n            onClick={scrollToTop}\n            label={'GO UP'}\n            arrow={<ImArrowUp fill=\"#2314f7\" size=\"32\" />}\n          />\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </>\n  );\n}\n"],"names":["GoBackButton","styled","SpanLabel","ButtonGoBack","onClick","label","arrow","type","BASE_URL","API_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","getMovieBySearch","query","getCast","movieId","getReviews","GetTrending","getMoviesById","AuthorName","Review","AuthorNameValue","MoviesReviews","useParams","useState","reviews","setReviews","useEffect","moviesAPI","then","results","length","map","review","author","content","id","Button","window","scrollTo","top","behavior","fill","size"],"sourceRoot":""}